#!/usr/sbin/nft -f
define tproxy_port = 9998
define tproxy_mark = 1
define adguard_mark = 2
define adguard_port = 5353

table inet sing-box {
    chain prerouting {
        type filter hook prerouting priority mangle; policy accept;



        #第一步：跳过所有发往本地的流量
        ip daddr { 0.0.0.0/8, 10.0.0.0/8, 127.0.0.0/8, 169.254.0.0/16, 192.168.0.0/16, 224.0.0.0/4 } return
        ip6 daddr { ::1/128, fe80::/10 } return

        # 第二步：DNS重定向（必须放在地址过滤之后）
        meta l4proto { tcp, udp } th dport 53 tproxy ip to :$adguard_port meta mark set $adguard_mark accept
        meta l4proto { tcp, udp } th dport 853 tproxy ip to :$adguard_port meta mark set $adguard_mark accept
        meta l4proto { tcp, udp } th dport 53 tproxy ip6 to :$adguard_port meta mark set $adguard_mark accept
        meta l4proto { tcp, udp } th dport 853 tproxy ip6 to :$adguard_port meta mark set $adguard_mark accept

        meta l4proto tcp ip daddr 192.168.31.0/24 return
        meta l4proto tcp ip daddr 192.168.1.0/24 return
        meta l4proto tcp ip daddr 198.18.0.0/15 return
        ip daddr 192.168.31.0/24 udp dport != 53 return
        ip daddr 192.168.1.0/24 udp dport != 53 return
        ip daddr 198.18.0.0/15 udp dport != 53 return

        # 第三步：主代理规则
        meta mark $tproxy_mark return
        meta l4proto { tcp, udp } tproxy ip to 127.0.0.1:$tproxy_port meta mark set $tproxy_mark accept
        meta l4proto { tcp, udp } tproxy ip6 to [::1]:$tproxy_port meta mark set $tproxy_mark accept
    }

    chain output{
        type filter hook output priority filter;policy accept;
        ip daddr { 0.0.0.0/8, 10.0.0.0/8, 100.64.0.0/10, 127.0.0.0/8, 169.254.0.0/16, 172.17.0.0/16, 192.0.0.0/24, 192.168.0.0/24, 224.0.0.0/4, 240.0.0.0/4, 255.255.255.255/32 } return
        ## 以下两行的网段根据自己的网络情况修改
        meta l4proto tcp ip daddr 192.168.31.0/24 return
        meta l4proto tcp ip daddr 192.168.1.0/24 return
        meta l4proto tcp ip daddr 198.18.0.0/15 return
        ip daddr 192.168.31.0/24 udp dport != 53 return
        ip daddr 192.168.1.0/24 udp dport != 53 return
        ip daddr 198.18.0.0/15 udp dport != 53 return

        meta l4proto { tcp, udp } meta mark set $adguard_mark accept
        meta l4proto { tcp, udp } meta mark set $tproxy_mark accept

    }
}