#!/usr/sbin/nft -f
define tproxy_port = 9998
define tproxy_mark = 0x00000001
# define adguard_tproxy_mark = 0x00000002
define adguard_port = 5353
define tproxy_dns_port = 5555

table inet sing-box {
    chain prerouting {
        type filter hook prerouting priority mangle; policy accept;
        ip daddr { 0.0.0.0/8, 10.0.0.0/8, 100.64.0.0/10, 127.0.0.0/8, 169.254.0.0/16, 172.17.0.0/16, 192.0.0.0/24, 192.168.0.0/24, 224.0.0.0/4, 240.0.0.0/4, 255.255.255.255/32 } return
        ## 以下两行的网段根据自己的网络情况修改
        meta l4proto tcp ip daddr 192.168.31.0/24 return
        ip daddr 192.168.31.0/24 udp dport != {53,9090} return
        ip daddr 192.168.1.0/24 udp dport != {53,9090} return
        ## 以下三行是ipv6的设置不需要可以删除
        ip6 daddr { ::1, fe80::/10 } return
        meta l4proto tcp ip6 daddr fd00::/8 return
        ip6 daddr fd00::/8 udp dport != 53 return

        ## 排除 sunshine 流量
        udp dport {47984-47990} return
        tcp dport {47984-47990} return

        ## 以下两行端口需要跟sing-box 配置文件的tproxy端口一致
        meta l4proto tcp tproxy to :$tproxy_port meta mark set $tproxy_mark  accept
        meta l4proto udp tproxy to :$tproxy_port meta mark set $tproxy_mark  accept
    }

    # 处理本机流量
    chain output {
        type route hook output priority filter; policy accept;
        ip daddr { 0.0.0.0/8, 10.0.0.0/8, 100.64.0.0/10, 127.0.0.0/8, 169.254.0.0/16, 172.17.0.0/16, 192.0.0.0/24, 192.168.0.0/24, 224.0.0.0/4, 240.0.0.0/4, 255.255.255.255/32 } return
        ## 以下两行的网段根据自己的网络情况修改
        meta l4proto tcp ip daddr 192.168.31.0/24 return
        ip daddr 192.168.31.0/24 udp dport != {53,9090} return
        ip daddr 192.168.1.0/24 udp dport != {53,9090} return


        ## 以下三行是ipv6设置不需要可以删除
        ip6 daddr { ::1, fe80::/10 } return
        meta l4proto tcp ip6 daddr fd00::/8 return
        ip6 daddr fd00::/8 udp dport != 53 return

        ## 排除 sunshine 流量
        udp dport {47984-47990} return
        tcp dport {47984-47990} return

        meta l4proto { tcp, udp } meta mark set $tproxy_mark accept
    }

}