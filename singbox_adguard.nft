#!/usr/sbin/nft -f

flush ruleset

define DNS_REDIRECT_PORT = 5353      # DNS 目标端口（AdGuard Home 或 sing-box DNS 监听端口）
define SINGBOX_TPROXY_PORT = 9998   # sing-box TProxy 入站端口
define TPROXY_MARK = 0x2333          # TProxy 标记（需与路由规则一致）

table inet sing-box {
    # 定义 NAT 链处理 DNS 重定向（IPv4）
    chain dnat_dns {
        type nat hook prerouting priority -100; policy accept;
        # ---- 规则1：跳过内网和特殊地址（IPv4）----
        ip daddr { 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16, 127.0.0.0/8 } return
        # ---- 规则2：DNS流量重定向（IPv4）----
        meta l4proto udp th dport 53 dnat ip to 127.0.0.1:$DNS_REDIRECT_PORT
        meta l4proto tcp th dport 53 dnat ip to 127.0.0.1:$DNS_REDIRECT_PORT

        # ---- （可选）IPv6 DNS 重定向 ----
        # meta l4proto udp th dport 53 dnat ip6 to ::1:$DNS_REDIRECT_PORT
        # meta l4proto tcp th dport 53 dnat ip6 to ::1:$DNS_REDIRECT_PORT
    }

    # 定义 TProxy 链处理其余流量
    chain tproxy_traffic {
        type filter hook prerouting priority mangle; policy accept;
        # ---- 规则3：跳过已处理的DNS流量 ----
        meta l4proto { tcp, udp } th dport 53 return
        ip daddr 192.168.31.0/24 udp dport != 53 return
        # ---- 规则4：其余流量通过TProxy转发 ----
        meta l4proto tcp tproxy to :$SINGBOX_TPROXY_PORT meta mark set $TPROXY_MARK accept
        meta l4proto udp tproxy to :$SINGBOX_TPROXY_PORT meta mark set $TPROXY_MARK accept
    }

    # 处理本机发出的DNS流量（IPv4）
    # chain output {
    #     type route hook output priority mangle; policy accept;
    #     meta l4proto { tcp, udp } th dport 53 dnat ip to 127.0.0.1:$DNS_REDIRECT_PORT
    # }
}